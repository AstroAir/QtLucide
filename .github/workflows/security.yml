name: Security

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
      actions: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp', 'python' ]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality

    - name: Setup Python (for Python analysis)
      if: matrix.language == 'python'
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Qt (for C++ analysis)
      if: matrix.language == 'cpp'
      run: |
        sudo apt-get update
        sudo apt-get install -y qt6-base-dev qt6-svg-dev libgl1-mesa-dev

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate
        allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC, GPL-2.0, GPL-3.0, LGPL-2.1, LGPL-3.0

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-22.04

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner in repo mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  semgrep:
    name: Semgrep Security Analysis
    runs-on: ubuntu-22.04

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Semgrep
      run: |
        pip install semgrep
        semgrep scan --sarif --config=p/security-audit --config=p/secrets --config=p/cpp . > semgrep.sarif

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: semgrep.sarif
      if: always()

  osv-scanner:
    name: OSV Scanner
    runs-on: ubuntu-22.04

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run OSV Scanner
      uses: google/osv-scanner-action@v2.2.2
      with:
        scan-args: |-
          -r
          --skip-git
          .

  secrets-scan:
    name: Secret Detection
    runs-on: ubuntu-22.04

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  supply-chain-security:
    name: Supply Chain Security
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        path: ./
        format: spdx-json
        output-file: sbom.spdx.json

    - name: Upload SBOM
      uses: actions/upload-artifact@v4
      with:
        name: sbom
        path: sbom.spdx.json
        retention-days: 30

    - name: Scan SBOM with Grype
      uses: anchore/scan-action@v3
      with:
        sbom: sbom.spdx.json
        fail-build: false
        severity-cutoff: medium

  security-scorecard:
    name: OSSF Scorecard
    runs-on: ubuntu-22.04
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    permissions:
      security-events: write
      id-token: write
      contents: read
      actions: read

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Run analysis
      uses: ossf/scorecard-action@v2.4.2
      with:
        results_file: results.sarif
        results_format: sarif
        publish_results: true

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SARIF file
        path: results.sarif
        retention-days: 5

    - name: Upload to code-scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif
